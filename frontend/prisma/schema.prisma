generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id             String               @id @db.Uuid
  name           String
  email          String               @unique
  external_id    String
  created_at     DateTime             @default(now()) @db.Timestamp(6)
  updated_at     DateTime             @default(now()) @db.Timestamp(6)
  assigned_roles user_roles_mapping[] @relation("AssignedBy")
  user_roles     user_roles_mapping[]

  @@index([email], map: "idx_users_email")
  @@index([external_id], map: "idx_users_external_id")
}

model roles {
  id          String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String               @unique(map: "roles_name_unique")
  description String?
  is_active   Boolean              @default(true)
  created_at  DateTime             @default(now()) @db.Timestamp(6)
  updated_at  DateTime             @default(now()) @db.Timestamp(6)
  user_roles  user_roles_mapping[]

  @@index([is_active], map: "idx_roles_active")
}

model user_roles_mapping {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String    @db.Uuid
  role_id          String    @db.Uuid
  assigned_by      String?   @db.Uuid
  assigned_at      DateTime  @default(now()) @db.Timestamp(6)
  is_active        Boolean   @default(true)
  expires_at       DateTime? @db.Timestamp(6)
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  assigned_by_user users?    @relation("AssignedBy", fields: [assigned_by], references: [id], onUpdate: NoAction, map: "fk_user_roles_assigned_by")
  role             roles     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_roles_role")
  user             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_roles_user")

  @@unique([user_id, role_id], name: "user_role_unique", map: "user_role_unique")
  @@index([is_active], map: "idx_user_roles_mapping_active")
  @@index([role_id], map: "idx_user_roles_mapping_role_id")
  @@index([user_id], map: "idx_user_roles_mapping_user_id")
}

model mandals {
  id            String     @id @db.Uuid
  label_english String
  label_telugu  String
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  villages      villages[]
}

model members {
  id                     String         @id @db.Uuid
  full_name_english      String
  village_id             String         @db.Uuid
  house_number           String
  phone_number           String
  husband_or_father_name String
  created_at             DateTime       @default(now()) @db.Timestamp(6)
  updated_at             DateTime       @default(now()) @db.Timestamp(6)
  villages               villages       @relation(fields: [village_id], references: [id], onUpdate: NoAction, map: "fk_members_village")
  transactions           transactions[]
}

model supervisors {
  id                String         @id @db.Uuid
  full_name_english String
  full_name_telugu  String
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  transactions      transactions[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id               String                @id @db.Uuid
  supervised_by    String                @db.Uuid
  member           String                @db.Uuid
  type             transaction_type_enum
  amount           Int
  comments         String?
  loan_type        loan_type_enum?
  fund_type        fund_type_enum?
  transaction_date DateTime              @db.Date
  recipet_number   String
  created_at       DateTime              @default(now()) @db.Timestamp(6)
  updated_at       DateTime              @default(now()) @db.Timestamp(6)
  members          members               @relation(fields: [member], references: [id], onUpdate: NoAction, map: "fk_transactions_member")
  supervisors      supervisors           @relation(fields: [supervised_by], references: [id], onUpdate: NoAction, map: "fk_transactions_supervisor")
}

model villages {
  id            String    @id @db.Uuid
  label_english String
  label_telugu  String
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  mandal        String    @db.Uuid
  members       members[]
  mandals       mandals   @relation(fields: [mandal], references: [id], onUpdate: NoAction, map: "fk_villages_mandal")
}

enum fund_type_enum {
  DDS_FUNDS
  PROJECT_FUNDS
}

enum loan_type_enum {
  LIVESTOCK
  INDIVIDUAL
  LAAGODI
}

enum transaction_type_enum {
  DEPOSIT
  WITHDRAWL
  LOAN
  PAYBACK
}
